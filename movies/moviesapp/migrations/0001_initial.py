# Generated by Django 5.2.3 on 2025-07-18 07:12

import django.db.models.deletion
import django.utils.timezone
import moviesapp.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Actor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("age", models.PositiveIntegerField(blank=True, null=True)),
                ("bio", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, upload_to=moviesapp.models.upload_to_actor
                    ),
                ),
            ],
            options={
                "verbose_name": "Actor",
                "verbose_name_plural": "Actors",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Picture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "image",
                    models.ImageField(upload_to=moviesapp.models.upload_to_picture),
                ),
            ],
            options={
                "verbose_name": "Picture",
                "verbose_name_plural": "Pictures",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Record",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("release_date", models.DateField()),
                ("genre", models.CharField(max_length=50)),
                ("extension", models.CharField(max_length=10)),
                (
                    "size",
                    models.PositiveBigIntegerField(help_text="File size in bytes"),
                ),
                ("download_url", models.URLField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "actors",
                    models.ManyToManyField(
                        blank=True, related_name="records", to="moviesapp.actor"
                    ),
                ),
                (
                    "picture",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="records",
                        to="moviesapp.picture",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="records", to="moviesapp.tag"
                    ),
                ),
            ],
            options={
                "verbose_name": "Record",
                "verbose_name_plural": "Records",
                "ordering": ["-created_at"],
            },
        ),
    ]
